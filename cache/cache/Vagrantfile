# -*- mode: ruby -*-
# vi: set ft=ruby :

boxes = [
    {
        :name => "ignite1",
        :box  => "ubuntu/trusty64",
        :eth1 => "192.168.6.10",
        :mem  => "1024",
        :cpu  => "1",
        :files => [
            { :src => "v-files/lists/",     :dst => "/home/vagrant/" },
            { :src => "v-files/archives/",  :dst => "/home/vagrant/" },
            { :src => "v-files/resources/", :dst => "/home/vagrant/" },
        ],
        :shells => [
            "v-shells/aptupdate.sh",
            "v-shells/apt.sh",
            "v-shells/generic.sh",
            "v-shells/getignite.sh",
            "v-shells/done.sh",
        ],
        :ports_forward => [
        ]
    },
    {
        :name => "ignite2",
        :box  => "ubuntu/trusty64",
        :eth1 => "192.168.6.11",
        :mem  => "1024",
        :cpu  => "1",
        :files => [
        ],
        :shells => [
        ],
        :ports_forward => [
        ]
    },
]

Vagrant.configure(2) do |config|
    boxes.each do |opts|

        config.vm.define opts[:name] do |config|
            config.vm.boot_timeout = 600
            config.vbguest.auto_update = false
            config.vbguest.no_remote = true
            config.ssh.insert_key = false

            config.vm.provider "virtualbox" do |v, override|
                override.vm.box = opts[:box]
            end

            config.vm.hostname = opts[:name]

            config.vm.provider "virtualbox" do |v|
                v.customize ["modifyvm", :id, "--memory", opts[:mem]]
                v.customize ["modifyvm", :id, "--cpus", opts[:cpu]]
            end

            config.vm.network :private_network, ip: opts[:eth1]

            opts[:ports_forward].each do |item|
                config.vm.network "forwarded_port", guest: item[:guest], host: item[:host], host_ip: "127.0.0.1"
            end

            opts[:files].each do |fileitem|
                config.vm.provision :file do |file|
                    file.source = fileitem[:src]
                    file.destination = fileitem[:dst]
                end
            end

            opts[:shells].each do |item|
                config.vm.provision :shell, path: item
            end
        end
    end
end
